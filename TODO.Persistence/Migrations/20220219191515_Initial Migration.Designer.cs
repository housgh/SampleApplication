// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TODO.Persistence.Contexts;

namespace TODO.Persistence.Migrations
{
    [DbContext(typeof(TasksDbContext))]
    [Migration("20220219191515_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A sample project that does nothing",
                            Name = "Sample Project 1",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "A sample project that does nothing",
                            Name = "Sample Project 2",
                            OwnerId = 2
                        });
                });

            modelBuilder.Entity("Common.Domain.Entities.ProjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            Role = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 2,
                            Role = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProjectId = 1,
                            Role = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProjectId = 2,
                            Role = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ProjectId = 2,
                            Role = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Common.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 381, DateTimeKind.Local).AddTicks(6855),
                            Mobile = "+96171234567",
                            Name = "User1",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 385, DateTimeKind.Local).AddTicks(5706),
                            Mobile = "+96171234568",
                            Name = "User2",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "user3@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 385, DateTimeKind.Local).AddTicks(5746),
                            Mobile = "+96171234569",
                            Name = "User3",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            Email = "user4@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 385, DateTimeKind.Local).AddTicks(5754),
                            Mobile = "+96171234560",
                            Name = "User4",
                            Role = 0
                        },
                        new
                        {
                            Id = 5,
                            Email = "user5@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 385, DateTimeKind.Local).AddTicks(5759),
                            Mobile = "+96171234571",
                            Name = "User5",
                            Role = 0
                        },
                        new
                        {
                            Id = 6,
                            Email = "user6@todoapp.com",
                            HashedPassword = "",
                            JoinedOn = new DateTime(2022, 2, 19, 21, 15, 14, 385, DateTimeKind.Local).AddTicks(5770),
                            Mobile = "+96171234572",
                            Name = "User6",
                            Role = 0
                        });
                });

            modelBuilder.Entity("Common.Domain.Entities.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Common.Domain.Entities.Project", b =>
                {
                    b.HasOne("Common.Domain.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Common.Domain.Entities.ProjectUser", b =>
                {
                    b.HasOne("Common.Domain.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Common.Domain.Entities.UserTask", b =>
                {
                    b.HasOne("Common.Domain.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
